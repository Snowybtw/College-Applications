/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment;

import javax.swing.JOptionPane;

/**
 *
 * @author callum_snow
 */
public class VacUI extends javax.swing.JFrame {

    /**
     * Creates new form VacUI
     */
    private VacInterface VacI;
     
    
    public VacUI() {
       VacI= new VacPriorityQ(); 
       
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AddPerson = new javax.swing.JButton();
        Name = new javax.swing.JTextField();
        Age = new javax.swing.JTextField();
        list_Button = new javax.swing.JButton();
        DisplayButton = new javax.swing.JButton();
        Conditions_Level = new javax.swing.JLabel();
        ExitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Conditions = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayTextArea = new javax.swing.JTextArea();
        AdmitGroup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddPerson.setText("Add");
        AddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPersonActionPerformed(evt);
            }
        });

        list_Button.setText("list ");
        list_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                list_ButtonActionPerformed(evt);
            }
        });

        DisplayButton.setText("Display");
        DisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayButtonActionPerformed(evt);
            }
        });

        Conditions_Level.setText("Have they got any Medical Conditions");

        ExitButton.setText("Exit");
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Name Of Recipient");

        jLabel3.setText("Age of Recipient");

        DisplayTextArea.setColumns(20);
        DisplayTextArea.setRows(5);
        jScrollPane1.setViewportView(DisplayTextArea);

        AdmitGroup.setText("Admit Participents");
        AdmitGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdmitGroupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabel2))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Conditions, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Name, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Age, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Conditions_Level, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)))
                        .addGap(314, 314, 314))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(AdmitGroup)
                            .addGap(338, 338, 338))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(AddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(list_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(DisplayButton)
                            .addGap(18, 18, 18)
                            .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(227, 227, 227)))))
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Conditions_Level)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Conditions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(list_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ExitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AdmitGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPersonActionPerformed
       
         VacRecipient VR = new VacRecipient();
        String name, condition = null; 
        int age =  Integer.parseInt(Age.getText());
        int priority;
       Integer priorityValue; 
       
       
        if(age <=17){
         priorityValue= 1;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
        Name.setText("");
        Conditions.setText("");
        Age.setText("");
       
        
        
        
        }else if(age >= 18 && age <=29 &&Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 2;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
        
        
        }
         else if(age >= 30 && age <=44 &&Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 3;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         } else if(age >= 45 && age <=54 &&Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 4;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         } else if(age >= 55 && age <=64 &&Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 5;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         }
          else if(age >= 18 && age <=64 &&Conditions.getText().equalsIgnoreCase("yes") ){
             
                 priorityValue= 6;
                 priority= priorityValue.intValue();
                 VacI.inqueue(priority, VR);
                 name = Name.getText();
                 condition = Conditions.getText();
                 age =  Integer.parseInt(Age.getText());
                 
                 VR.setr_Age(age);
                 VR.setr_name(name);
                 VR.setM_Conditions(condition);
                 
                 
                 DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
             
                 
             
             
          }else if(age >= 65 && age <=69 &Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 7;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         }else if(age >= 70 && age <=79 &Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 8;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         }else if(age >= 80 && age <=89 &&Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 9;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         }else if(age >= 90 &&Conditions.getText().equalsIgnoreCase("no")){
         priorityValue= 10;
         priority= priorityValue.intValue();
         VacI.inqueue(priority, VR);
        name = Name.getText();
        condition = Conditions.getText();
        age =  Integer.parseInt(Age.getText());
        
        VR.setr_Age(age);
        VR.setr_name(name);
        VR.setM_Conditions(condition);
        
      
        DisplayTextArea.append(Name.getText()+" Your details have been saved successfully "+"\n");
       
         }if (Name.getText().isEmpty() && Age.getText().isEmpty() && Conditions.getText().isEmpty()){
             DisplayTextArea.append(" Your details have been saved successfully "+"\n");
         }
        
        

    }//GEN-LAST:event_AddPersonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void list_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_list_ButtonActionPerformed
        
         if(!VacI.isEmpty()){
        DisplayTextArea.append("\n"+"Information of Recipients that are getting vaccinated" );
        DisplayTextArea.append(VacI.PrintPQ()+ "\n");
         }
         else{
             DisplayTextArea.append("There is no information stored within the system"+"\n");
         }
    }//GEN-LAST:event_list_ButtonActionPerformed

    private void DisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayButtonActionPerformed
       
        if(!VacI.isEmpty()){
         DisplayTextArea.append("\n"+"The Total amount of Recipients waiting for vacination is: "+VacI.size()+"\n");   
        }else{
         DisplayTextArea.append("There are no Participents waiting for vacination"+"\n");
        }
    }//GEN-LAST:event_DisplayButtonActionPerformed

    private void AdmitGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdmitGroupActionPerformed
       
        
        if(!VacI.isEmpty()){
           VacPQElement vacEl = ((VacPQElement)VacI.rqueue());
           VacRecipient VR = (VacRecipient)vacEl.getElement();
           
           
           DisplayTextArea.append("Priority Group "+vacEl.getKey()+" can now enter for vacination"+"\n");
           
       }else{
           DisplayTextArea.append("There are no priority groups waiting for vacination");
       }
    }//GEN-LAST:event_AdmitGroupActionPerformed

    public void cleartext(){
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VacUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VacUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VacUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VacUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VacUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddPerson;
    private javax.swing.JButton AdmitGroup;
    private javax.swing.JTextField Age;
    private javax.swing.JTextField Conditions;
    private javax.swing.JLabel Conditions_Level;
    private javax.swing.JButton DisplayButton;
    private javax.swing.JTextArea DisplayTextArea;
    private javax.swing.JButton ExitButton;
    private javax.swing.JTextField Name;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton list_Button;
    // End of variables declaration//GEN-END:variables
}
